{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\unnat\\\\Desktop\\\\Final Project\\\\almond-project-v3-master\\\\src\\\\components\\\\signUp\\\\SignUp.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react'; // import Avatar from '@mui/material/Avatar';\n\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid'; // import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\n\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { toast } from 'react-toastify';\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst theme = createTheme();\nwindow.scrollTo(0, 0);\nexport default function SignInSide(_ref) {\n  _s();\n\n  let {\n    state,\n    setstate,\n    newUser\n  } = _ref;\n  const history = useHistory();\n  const [isempty, setisempty] = React.useState('');\n  const [validate, setvalidate] = React.useState('');\n  const [emailValidate, setemailValidate] = React.useState('');\n\n  function checkIsEmpty(email, password) {\n    if (email === '' || password === '') {\n      setisempty(false);\n      return false;\n    } else {\n      setisempty(true);\n      return true;\n    }\n  }\n\n  function validateEmail(email) {\n    const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regex.test(String(email).toLowerCase());\n  }\n\n  function createItem(umail, upass, uname) {\n    newUser({\n      name: uname,\n      email: umail,\n      pass: upass\n    });\n    toast.success('Registerd Success!', {\n      position: \"top-center\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored'\n    });\n    history.push(\"/\"); // localStorage.setItem(\"useremail\", umail);\n    // localStorage.setItem(\"userpass\", upass);\n  }\n\n  React.useEffect(() => {\n    if (emailValidate === true && validate === true) {\n      console.log('success');\n      setstate(true);\n    }\n  }, [emailValidate, validate]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget); // To check if fields are empty\n\n    let result = checkIsEmpty(data.get('email'), data.get('password'), data.get('name')); // let counter = 0\n\n    if (result === true) {\n      createItem(data.get('email'), data.get('password'), data.get('name'));\n      let emailFlag = validateEmail(data.get('email')); // console.log(emailFlag);\n\n      if (emailFlag) {\n        setemailValidate(true);\n      } else {\n        setemailValidate(false);\n      } // console.log(\"Move forard\");\n      // Validate lowercase letters\n\n\n      let lowerCaseLetters = /[a-z]/g;\n\n      if (data.get('password').match(lowerCaseLetters)) {\n        // console.log('email successs lower');\n        setvalidate(true);\n      } else {\n        setvalidate(false);\n      } // Validate capital letters\n\n\n      let upperCaseLetters = /[A-Z]/g;\n\n      if (data.get('password').match(upperCaseLetters)) {\n        // console.log('email successs capital');\n        setvalidate(true);\n      } else {\n        setvalidate(false);\n      } // Validate numbers\n\n\n      let numbers = /[0-9]/g;\n\n      if (data.get('password').match(numbers)) {\n        // console.log('email successs number');\n        setvalidate(true);\n      } else {\n        setvalidate(false);\n      } // Validate length\n\n\n      if (data.get('password').length >= 8) {\n        // console.log('email successs length');\n        setvalidate(true);\n      } else {\n        setvalidate(false);\n      }\n    } // console.log({\n    //     email: data.get('email'),\n    //     password: data.get('password'),\n    // });\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      component: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: false,\n        sm: 4,\n        md: 7,\n        sx: {\n          backgroundImage: 'url(https://source.unsplash.com/random)',\n          backgroundRepeat: 'no-repeat',\n          backgroundColor: t => t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n          backgroundSize: 'cover',\n          backgroundPosition: 'center'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        md: 5,\n        component: Paper,\n        elevation: 6,\n        square: true,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            my: 8,\n            mx: 4,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            color: \"dodgerblue\",\n            component: \"h1\",\n            variant: \"h5\",\n            children: \"Information Security Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            width: \"90%\",\n            component: \"form\",\n            onSubmit: handleSubmit,\n            sx: {\n              mt: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              fullWidth: true,\n              id: \"email\",\n              label: \"Email Address\",\n              name: \"email\",\n              autoComplete: \"email\",\n              autoFocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              fullWidth: true,\n              id: \"name\",\n              label: \"Enter Name\",\n              type: \"text\",\n              name: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: true,\n                sx: {\n                  color: \"red\",\n                  fontSize: \"14px\"\n                },\n                children: isempty && emailValidate === false ? \"Please Use the Standard Email Format\" : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"normal\",\n              fullWidth: true,\n              name: \"password\",\n              label: \"Password\",\n              type: \"password\",\n              id: \"password\",\n              autoComplete: \"current-password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: true,\n                sx: {\n                  color: \"red\",\n                  fontSize: \"14px\"\n                },\n                children: [isempty === false ? \"Please Fill the Required Fields\" : null, isempty === true && validate === false ? \"Password must contain Uppercase,Lowercase and Number from 1-8 minimum\" : null]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              sx: {\n                mt: 3,\n                mb: 2\n              },\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                onClick: () => {\n                  setstate(true);\n                },\n                item: true,\n                xs: true,\n                sx: {\n                  fontWeight: \"bolder\",\n                  fontSize: \"16px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignInSide, \"ug1J7J2TBF6nvmYImYfxk36QVq8=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignInSide;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignInSide\");","map":{"version":3,"sources":["C:/Users/unnat/Desktop/Final Project/almond-project-v3-master/src/components/signUp/SignUp.jsx"],"names":["React","Button","CssBaseline","TextField","Link","Paper","Box","Grid","Typography","createTheme","ThemeProvider","toast","useHistory","theme","window","scrollTo","SignInSide","state","setstate","newUser","history","isempty","setisempty","useState","validate","setvalidate","emailValidate","setemailValidate","checkIsEmpty","email","password","validateEmail","regex","test","String","toLowerCase","createItem","umail","upass","uname","name","pass","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","push","useEffect","console","log","handleSubmit","event","preventDefault","data","FormData","currentTarget","result","get","emailFlag","lowerCaseLetters","match","upperCaseLetters","numbers","length","backgroundImage","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","my","mx","display","flexDirection","alignItems","mt","color","fontSize","mb","fontWeight"],"mappings":"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","sourcesContent":["import * as React from 'react';\n// import Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Link from '@mui/material/Link';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\n// import LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { toast } from 'react-toastify';\nimport { useHistory } from 'react-router';\n\nconst theme = createTheme();\nwindow.scrollTo(0, 0);\n\nexport default function SignInSide({ state, setstate, newUser }) {\n  const history = useHistory()\n\n  const [isempty, setisempty] = React.useState('')\n  const [validate, setvalidate] = React.useState('')\n  const [emailValidate, setemailValidate] = React.useState('')\n\n\n\n\n  function checkIsEmpty(email, password) {\n    if (email === '' || password === '') {\n      setisempty(false)\n      return false\n    } else {\n      setisempty(true)\n      return true\n    }\n  }\n\n  function validateEmail(email) {\n    const regex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regex.test(String(email).toLowerCase());\n  }\n\n  function createItem(umail, upass, uname) {\n    newUser({\n      name: uname,\n      email: umail,\n      pass: upass\n    })\n    toast.success('Registerd Success!', {\n      position: \"top-center\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored'\n    });\n    history.push(\"/\")\n\n    // localStorage.setItem(\"useremail\", umail);\n    // localStorage.setItem(\"userpass\", upass);\n  }\n\n\n  React.useEffect(() => {\n    if (emailValidate === true && validate === true) {\n      console.log('success');\n      setstate(true)\n    }\n\n  }, [emailValidate, validate])\n\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const data = new FormData(event.currentTarget);\n\n    // To check if fields are empty\n    let result = checkIsEmpty(data.get('email'), data.get('password'), data.get('name'))\n    // let counter = 0\n\n    if (result === true) {\n      createItem(data.get('email'), data.get('password'), data.get('name'))\n\n      let emailFlag = validateEmail(data.get('email'))\n      // console.log(emailFlag);\n      if (emailFlag) {\n        setemailValidate(true)\n      } else {\n        setemailValidate(false)\n      }\n\n      // console.log(\"Move forard\");\n\n\n      // Validate lowercase letters\n      let lowerCaseLetters = /[a-z]/g;\n      if (data.get('password').match(lowerCaseLetters)) {\n        // console.log('email successs lower');\n        setvalidate(true)\n      } else {\n        setvalidate(false)\n      }\n\n      // Validate capital letters\n      let upperCaseLetters = /[A-Z]/g;\n      if (data.get('password').match(upperCaseLetters)) {\n        // console.log('email successs capital');\n        setvalidate(true)\n      } else {\n        setvalidate(false)\n      }\n\n      // Validate numbers\n      let numbers = /[0-9]/g;\n      if (data.get('password').match(numbers)) {\n        // console.log('email successs number');\n        setvalidate(true)\n      } else {\n        setvalidate(false)\n      }\n\n      // Validate length\n      if (data.get('password').length >= 8) {\n        // console.log('email successs length');\n        setvalidate(true)\n      } else {\n        setvalidate(false)\n      }\n\n\n    }\n\n\n    // console.log({\n    //     email: data.get('email'),\n    //     password: data.get('password'),\n    // });\n  };\n\n\n\n  return (\n    <ThemeProvider theme={theme} >\n      <Grid container component=\"main\" >\n        <CssBaseline />\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={7}\n          sx={{\n            backgroundImage: 'url(https://source.unsplash.com/random)',\n            backgroundRepeat: 'no-repeat',\n            backgroundColor: (t) =>\n              t.palette.mode === 'light' ? t.palette.grey[50] : t.palette.grey[900],\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n          }}\n        />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            {/* <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n                            <LockOutlinedIcon />\n                        </Avatar> */}\n            <Typography color=\"dodgerblue\" component=\"h1\" variant=\"h5\">\n              Information Security Sign Up\n\n            </Typography>\n            <Box width=\"90%\" component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\n              <TextField\n                margin=\"normal\"\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n              />\n\n              <TextField\n                margin=\"normal\"\n                fullWidth\n                id=\"name\"\n                label=\"Enter Name\"\n                type=\"text\"\n                name=\"text\"\n              />\n              <Grid container>\n                <Grid item xs sx={{ color: \"red\", fontSize: \"14px\" }}>\n                  {\n                    isempty && emailValidate === false ? \"Please Use the Standard Email Format\" : null\n                  }\n                </Grid>\n              </Grid>\n              <TextField\n                margin=\"normal\"\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n              {/* <FormControlLabel\n                                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                                label=\"Remember me\"\n                            /> */}\n              <Grid container>\n                <Grid item xs sx={{ color: \"red\", fontSize: \"14px\" }}>\n                  {\n                    isempty === false ? \"Please Fill the Required Fields\" : null\n                  }{\n\n                    isempty === true && validate === false ? \"Password must contain Uppercase,Lowercase and Number from 1-8 minimum\" : null\n                  }\n                </Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                Sign Up\n              </Button>\n              <Grid container>\n                <Grid onClick={() => {\n                  setstate(true)\n                }} item xs sx={{ fontWeight: \"bolder\", fontSize: \"16px\" }}>\n\n\n                </Grid>\n              </Grid>\n\n            </Box>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n}"]},"metadata":{},"sourceType":"module"}